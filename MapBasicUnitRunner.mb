Include "mapbasic.def"
Include "MapBasicUnit.mb"

Declare Sub Main

Sub Main

Print "-----------"
Print "new testrun." + Time(24)
Print "-----------"

Call AssertTrue("ThisTestShouldPass", TRUE)

Call AssertTrue("ThisTestShouldFail", FALSE)

Dim StringToTest As String
Dim report As TestReport
report.testName = "testThatErrorConverterPresentsPassingTests"
report.hasTestPassed = TRUE
report.actual = "TRUE (type: Logical)"
report.expected = "TRUE (type: Logical)"
Dim actual As Logical
If ConvertErrorReportToString(report) <> "Test: testThatErrorConverterPresentsPassingTests has passed." then
actual = FALSE
else 
actual = TRUE
End If
Call AssertTrue("testThatErrorConverterPresentsPassingTests", actual)

report.testName = "testThatErrorConverterPresentsFailingTests"
report.hasTestPassed = FALSE
report.actual = "FALSE (type: Logical)"
report.expected = "TRUE (type: Logical)"
If ConvertErrorReportToString(report) <> "Test: testThatErrorConverterPresentsFailingTests has FAILED. Expected TRUE (type: Logical), but was FALSE (type: Logical)" then
actual = FALSE
else 
actual = TRUE
End If
Call AssertTrue("testThatErrorConverterPresentsFailingTests", actual)


StringToTest = "string to test"
Call AssertStringEqual("AssertPassesWhenInstancesOfTheSameStringAreEqual", StringToTest, StringToTest)

Call AssertStringEqual("AssertFailsWhenStringDifferent", StringToTest, UCase$(StringToTest))

End Sub